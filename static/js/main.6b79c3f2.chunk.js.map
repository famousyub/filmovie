{"version":3,"sources":["assets/tmovie.png","components/header/Header.jsx","assets/footer-bg.jpg","assets/TMDB.svg","components/footer/Footer.jsx","components/button/Button.jsx","components/modal/Modal.jsx","api/apiConfig.js","api/axiosClient.js","api/tmdbApi.js","components/hero-slide/HeroSlide.jsx","components/movie-card/MovieCard.jsx","components/movie-list/MovieList.jsx","pages/Home.jsx","components/page-header/PageHeader.jsx","components/input/Input.jsx","components/movie-grid/MovieGrid.jsx","pages/Catalog.jsx","pages/detail/CastList.jsx","pages/detail/VideoList.jsx","pages/detail/Detail.jsx","config/Routes.jsx","App.js","index.js"],"names":["headerNav","display","path","Header","pathname","useLocation","headerRef","useRef","active","findIndex","e","useEffect","shrinkHeader","document","body","scrollTop","documentElement","current","classList","add","remove","window","addEventListener","removeEventListener","_jsx","ref","className","children","_jsxs","src","logo","alt","Link","to","map","i","concat","Footer","style","backgroundImage","bg","TMDB","Button","props","onClick","OutlineButton","ModalContent","contentRef","closeModal","parentNode","onClose","Modal","setActive","useState","id","apiConfig","baseUrl","originalImage","imgPath","w500Image","axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","api_key","apiKey","interceptors","request","use","async","config","response","data","error","category","movie","tv","movieType","upcoming","popular","top_rated","tvType","on_the_air","tmdbApi","getMoviesList","type","url","get","getTvList","getVideos","cate","search","detail","credits","similar","HeroSlideItem","hisrory","useHistory","item","background","backdrop_path","poster_path","title","overview","push","modal","querySelector","videos","results","length","videSrc","key","setAttribute","innerHTML","toggle","TrailerModal","iframeRef","width","height","HeroSlide","SwiperCore","Autoplay","movieItems","setMovieItems","page","slice","console","log","getMovies","Swiper","modules","grabCursor","spaceBetween","slidesPerView","SwiperSlide","_ref","isActive","MovieCard","link","name","MovieList","items","setItems","getList","Home","_Fragment","PageHeader","Input","placeholder","value","onChange","MovieSearch","history","keyword","setKeyword","goToSearch","useCallback","trim","enterEvent","preventDefault","keyCode","target","MovieGrid","setPage","totalPage","setTotalPage","useParams","undefined","query","total_pages","Catalog","CastList","casts","setCasts","res","cast","getCredits","profile_path","Video","offsetWidth","VideoList","setVideos","Detail","setItem","scrollTo","getDetail","genres","genre","Routes","Switch","Route","component","exact","App","BrowserRouter","render","ReactDOM","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6b79c3f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmovie.6cdd7ab4.png\";","import React, { useRef, useEffect } from 'react';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport './header.scss';\r\n\r\nimport logo from '../../assets/tmovie.png';\r\n\r\nconst headerNav = [\r\n    {\r\n        display: 'Home',\r\n        path: '/'\r\n    },\r\n    {\r\n        display: 'Movies',\r\n        path: '/movie'\r\n    },\r\n    {\r\n        display: 'TV Series',\r\n        path: '/tv'\r\n    }\r\n];\r\n\r\nconst Header = () => {\r\n\r\n    const { pathname } = useLocation();\r\n    const headerRef = useRef(null);\r\n\r\n    const active = headerNav.findIndex(e => e.path === pathname);\r\n\r\n    useEffect(() => {\r\n        const shrinkHeader = () => {\r\n            if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\r\n                headerRef.current.classList.add('shrink');\r\n            } else {\r\n                headerRef.current.classList.remove('shrink');\r\n            }\r\n        }\r\n        window.addEventListener('scroll', shrinkHeader);\r\n        return () => {\r\n            window.removeEventListener('scroll', shrinkHeader);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={headerRef} className=\"header\">\r\n            <div className=\"header__wrap container\">\r\n                <div className=\"logo\">\r\n                    <img src={logo} alt=\"\" />\r\n                    <Link to=\"/\">DevMovies</Link>\r\n                </div>\r\n                <ul className=\"header__nav\">\r\n                    {\r\n                        headerNav.map((e, i) => (\r\n                            <li key={i} className={`${i === active ? 'active' : ''}`}>\r\n                                <Link to={e.path}>\r\n                                    {e.display}\r\n                                </Link>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/footer-bg.ef67846b.jpg\";","export default __webpack_public_path__ + \"static/media/TMDB.d87262f7.svg\";","import React from 'react';\r\n\r\nimport './footer.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport bg from '../../assets/footer-bg.jpg';\r\nimport logo from '../../assets/tmovie.png';\r\nimport TMDB from '../../assets/TMDB.svg';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\" style={{backgroundImage: `url(${bg})`}}>\r\n            <div className=\"footer__content container\">\r\n                <div className=\"footer__content__logo\">\r\n                    <div className=\"logo\">\r\n                        <img src={logo} alt=\"\" />\r\n                        <Link to=\"/\">DevMovies</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer__content__menus\">\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Home</Link>\r\n                        <Link to=\"/\">Contact us</Link>\r\n                        <Link to=\"/\">Term of services</Link>\r\n                        <Link to=\"/\">About us</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">Live</Link>\r\n                        <Link to=\"/\">FAQ</Link>\r\n                        <Link to=\"/\">Premium</Link>\r\n                        <Link to=\"/\">Pravacy policy</Link>\r\n                    </div>\r\n                    <div className=\"footer__content__menu\">\r\n                        <Link to=\"/\">You must watch</Link>\r\n                        <Link to=\"/\">Recent release</Link>\r\n                        <Link to=\"/\">Top IMDB</Link>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"footer__content__logo\">\r\n                    <div className=\"logo\">\r\n                        <img src={TMDB} alt=\"\" />\r\n                        <Link to=\"/\">Thanks TMDB</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './button.scss';\r\n\r\nconst Button = props => {\r\n    return (\r\n        <button\r\n            className={`btn ${props.className}`}\r\n            onClick={props.onClick ? () => props.onClick() : null}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport const OutlineButton = props => {\r\n    return (\r\n        <Button\r\n            className={`btn-outline ${props.className}`}\r\n            onClick={props.onClick ? () => props.onClick() : null}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './modal.scss';\r\n\r\nconst Modal = props => {\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setActive(props.active);\r\n    }, [props.active]);\r\n\r\n    return (\r\n        <div id={props.id} className={`modal ${active ? 'active' : ''}`}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nModal.propTypes = {\r\n    active: PropTypes.bool,\r\n    id: PropTypes.string\r\n}\r\n\r\nexport const ModalContent = props => {\r\n\r\n    const contentRef = useRef(null);\r\n\r\n    const closeModal = () => {\r\n        contentRef.current.parentNode.classList.remove('active');\r\n        if (props.onClose) props.onClose();\r\n    }\r\n\r\n    return (\r\n        <div ref={contentRef} className=\"modal__content\">\r\n            {props.children}\r\n            <div className=\"modal__content__close\" onClick={closeModal}>\r\n                <i className=\"bx bx-x\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nModalContent.propTypes = {\r\n    onClose: PropTypes.func\r\n}\r\n\r\nexport default Modal;\r\n","const apiConfig = {\r\n    baseUrl: 'https://api.themoviedb.org/3/',\r\n    // apiKey: 'get from TMDB official site',\r\n    originalImage: (imgPath) => `https://image.tmdb.org/t/p/original/${imgPath}`,\r\n    w500Image: (imgPath) => `https://image.tmdb.org/t/p/w500/${imgPath}`\r\n}\r\n\r\nexport default apiConfig;","import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\nimport apiConfig from './apiConfig';\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: apiConfig.baseUrl,\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    paramsSerializer: params => queryString.stringify({...params, api_key: apiConfig.apiKey})\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => config);\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n\r\n    return response;\r\n}, (error) => {\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import axiosClient from \"./axiosClient\";\r\n\r\nexport const category = {\r\n    movie: 'movie',\r\n    tv: 'tv'\r\n}\r\n\r\nexport const movieType = {\r\n    upcoming: 'upcoming',\r\n    popular: 'popular',\r\n    top_rated: 'top_rated'\r\n}\r\n\r\nexport const tvType = {\r\n    popular: 'popular',\r\n    top_rated: 'top_rated',\r\n    on_the_air: 'on_the_air'\r\n}\r\n\r\nconst tmdbApi = {\r\n    getMoviesList: (type, params) => {\r\n        const url = 'movie/' + movieType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getTvList: (type, params) => {\r\n        const url = 'tv/' + tvType[type];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    getVideos: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/videos';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    search: (cate, params) => {\r\n        const url = 'search/' + category[cate];\r\n        return axiosClient.get(url, params);\r\n    },\r\n    detail: (cate, id, params) => {\r\n        const url = category[cate] + '/' + id;\r\n        return axiosClient.get(url, params);\r\n    },\r\n    credits: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/credits';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n    similar: (cate, id) => {\r\n        const url = category[cate] + '/' + id + '/similar';\r\n        return axiosClient.get(url, {params: {}});\r\n    },\r\n}\r\n\r\nexport default tmdbApi;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport SwiperCore, { Autoplay } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport Button, { OutlineButton } from '../button/Button';\r\nimport Modal, { ModalContent } from '../modal/Modal';\r\n\r\nimport tmdbApi, { category, movieType } from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nimport './hero-slide.scss';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst HeroSlide = () => {\r\n\r\n    SwiperCore.use([Autoplay]);\r\n\r\n    const [movieItems, setMovieItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getMovies = async () => {\r\n            const params = {page: 1}\r\n            try {\r\n                const response = await tmdbApi.getMoviesList(movieType.popular, {params});\r\n                setMovieItems(response.results.slice(1, 4));\r\n                console.log(response);\r\n            } catch {\r\n                console.log('error');\r\n            }\r\n        }\r\n        getMovies();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"hero-slide\">\r\n            <Swiper\r\n                modules={[Autoplay]}\r\n                grabCursor={true}\r\n                spaceBetween={0}\r\n                slidesPerView={1}\r\n                // autoplay={{delay: 3000}}\r\n            >\r\n                {\r\n                    movieItems.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            {({ isActive }) => (\r\n                                <HeroSlideItem item={item} className={`${isActive ? 'active' : ''}`} />\r\n                            )}\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n            {\r\n                movieItems.map((item, i) => <TrailerModal key={i} item={item}/>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HeroSlideItem = props => {\r\n\r\n    let hisrory = useHistory();\r\n\r\n    const item = props.item;\r\n\r\n    const background = apiConfig.originalImage(item.backdrop_path ? item.backdrop_path : item.poster_path);\r\n\r\n    const setModalActive = async () => {\r\n        const modal = document.querySelector(`#modal_${item.id}`);\r\n\r\n        const videos = await tmdbApi.getVideos(category.movie, item.id);\r\n\r\n        if (videos.results.length > 0) {\r\n            const videSrc = 'https://www.youtube.com/embed/' + videos.results[0].key;\r\n            modal.querySelector('.modal__content > iframe').setAttribute('src', videSrc);\r\n        } else {\r\n            modal.querySelector('.modal__content').innerHTML = 'No trailer';\r\n        }\r\n\r\n        modal.classList.toggle('active');\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`hero-slide__item ${props.className}`}\r\n            style={{backgroundImage: `url(${background})`}}\r\n        >\r\n            <div className=\"hero-slide__item__content container\">\r\n                <div className=\"hero-slide__item__content__info\">\r\n                    <h2 className=\"title\">{item.title}</h2>\r\n                    <div className=\"overview\">{item.overview}</div>\r\n                    <div className=\"btns\">\r\n                        <Button onClick={() => hisrory.push('/movie/' + item.id)}>\r\n                            Watch now\r\n                        </Button>\r\n                        <OutlineButton onClick={setModalActive}>\r\n                            Watch trailer\r\n                        </OutlineButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"hero-slide__item__content__poster\">\r\n                    <img src={apiConfig.w500Image(item.poster_path)} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TrailerModal = props => {\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    const onClose = () => iframeRef.current.setAttribute('src', '');\r\n\r\n    return (\r\n        <Modal active={false} id={`modal_${item.id}`}>\r\n            <ModalContent onClose={onClose}>\r\n                <iframe ref={iframeRef} width=\"100%\" height=\"500px\" title=\"trailer\"></iframe>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HeroSlide;\r\n","import React from 'react';\r\n\r\nimport './movie-card.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../button/Button';\r\n\r\nimport { category } from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nconst MovieCard = props => {\r\n\r\n    const item  = props.item;\r\n\r\n    const link = '/' + category[props.category] + '/' + item.id;\r\n\r\n    const bg = apiConfig.w500Image(item.poster_path || item.backdrop_path);\r\n\r\n    return (\r\n        <Link to={link}>\r\n            <div className=\"movie-card\" style={{backgroundImage: `url(${bg})`}}>\r\n                <Button>\r\n                    <i className=\"bx bx-play\"></i>\r\n                </Button>\r\n            </div>\r\n            <h3>{item.title || item.name}</h3>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default MovieCard;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './movie-list.scss';\r\n\r\nimport { SwiperSlide, Swiper } from 'swiper/react';\r\n\r\n\r\nimport tmdbApi, { category } from '../../api/tmdbApi';\r\n\r\nimport MovieCard from '../movie-card/MovieCard';\r\n\r\nconst MovieList = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n\r\n            if (props.type !== 'similar') {\r\n                switch(props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(props.type, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(props.type, {params});\r\n                }\r\n            } else {\r\n                response = await tmdbApi.similar(props.category, props.id);\r\n            }\r\n            setItems(response.results);\r\n        }\r\n        getList();\r\n    }, [props.category, props.id, props.type]);\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            <Swiper\r\n                grabCursor={true}\r\n                spaceBetween={10}\r\n                slidesPerView={'auto'}\r\n            >\r\n                {\r\n                    items.map((item, i) => (\r\n                        <SwiperSlide key={i}>\r\n                            <MovieCard item={item} category={props.category}/>\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovieList.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { OutlineButton } from '../components/button/Button';\r\nimport HeroSlide from '../components/hero-slide/HeroSlide';\r\nimport MovieList from '../components/movie-list/MovieList';\r\n\r\nimport { category, movieType, tvType } from '../api/tmdbApi';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <HeroSlide/>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Trending Movies</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.movie} type={movieType.popular}/>\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Top Rated Movies</h2>\r\n                        <Link to=\"/movie\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.movie} type={movieType.top_rated}/>\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Trending TV</h2>\r\n                        <Link to=\"/tv\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.tv} type={tvType.popular}/>\r\n                </div>\r\n\r\n                <div className=\"section mb-3\">\r\n                    <div className=\"section__header mb-2\">\r\n                        <h2>Top Rated TV</h2>\r\n                        <Link to=\"/tv\">\r\n                            <OutlineButton className=\"small\">View more</OutlineButton>\r\n                        </Link>\r\n                    </div>\r\n                    <MovieList category={category.tv} type={tvType.top_rated}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport './page-header.scss';\r\n\r\nimport bg from '../../assets/footer-bg.jpg';\r\n\r\nconst PageHeader = props => {\r\n    return (\r\n        <div className=\"page-header\" style={{backgroundImage: `url(${bg})`}}>\r\n            <h2>{props.children}</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\n\r\nimport './input.scss';\r\n\r\nconst Input = props => {\r\n    return (\r\n        <input\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            value={props.value}\r\n            onChange={props.onChange ? (e) => props.onChange(e) : null}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nimport './movie-grid.scss';\r\n\r\nimport MovieCard from '../movie-card/MovieCard';\r\nimport Button, { OutlineButton } from '../button/Button';\r\nimport Input from '../input/Input'\r\n\r\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi';\r\n\r\nconst MovieGrid = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [totalPage, setTotalPage] = useState(0);\r\n\r\n    const { keyword } = useParams();\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            if (keyword === undefined) {\r\n                const params = {};\r\n                switch(props.category) {\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(tvType.popular, {params});\r\n                }\r\n            } else {\r\n                const params = {\r\n                    query: keyword\r\n                }\r\n                response = await tmdbApi.search(props.category, {params});\r\n            }\r\n            setItems(response.results);\r\n            setTotalPage(response.total_pages);\r\n        }\r\n        getList();\r\n    }, [props.category, keyword]);\r\n\r\n    const loadMore = async () => {\r\n        let response = null;\r\n        if (keyword === undefined) {\r\n            const params = {\r\n                page: page + 1\r\n            };\r\n            switch(props.category) {\r\n                case category.movie:\r\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\r\n                    break;\r\n                default:\r\n                    response = await tmdbApi.getTvList(tvType.popular, {params});\r\n            }\r\n        } else {\r\n            const params = {\r\n                page: page + 1,\r\n                query: keyword\r\n            }\r\n            response = await tmdbApi.search(props.category, {params});\r\n        }\r\n        setItems([...items, ...response.results]);\r\n        setPage(page + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"section mb-3\">\r\n                <MovieSearch category={props.category} keyword={keyword}/>\r\n            </div>\r\n            <div className=\"movie-grid\">\r\n                {\r\n                    items.map((item, i) => <MovieCard category={props.category} item={item} key={i}/>)\r\n                }\r\n            </div>\r\n            {\r\n                page < totalPage ? (\r\n                    <div className=\"movie-grid__loadmore\">\r\n                        <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst MovieSearch = props => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\r\n\r\n    const goToSearch = useCallback(\r\n        () => {\r\n            if (keyword.trim().length > 0) {\r\n                history.push(`/${category[props.category]}/search/${keyword}`);\r\n            }\r\n        },\r\n        [keyword, props.category, history]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const enterEvent = (e) => {\r\n            e.preventDefault();\r\n            if (e.keyCode === 13) {\r\n                goToSearch();\r\n            }\r\n        }\r\n        document.addEventListener('keyup', enterEvent);\r\n        return () => {\r\n            document.removeEventListener('keyup', enterEvent);\r\n        };\r\n    }, [keyword, goToSearch]);\r\n\r\n    return (\r\n        <div className=\"movie-search\">\r\n            <Input\r\n                type=\"text\"\r\n                placeholder=\"Enter keyword\"\r\n                value={keyword}\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n            />\r\n            <Button className=\"small\" onClick={goToSearch}>Search</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieGrid;\r\n","import React from 'react';\r\n\r\nimport { useParams } from 'react-router';\r\n\r\nimport PageHeader from '../components/page-header/PageHeader';\r\n\r\nimport { category as cate } from '../api/tmdbApi';\r\nimport MovieGrid from '../components/movie-grid/MovieGrid';\r\n\r\nconst Catalog = () => {\r\n\r\n    const { category } = useParams();\r\n\r\n    return (\r\n        <>\r\n            <PageHeader>\r\n                {category === cate.movie ? 'Movies' : 'TV Series'}\r\n            </PageHeader>\r\n            <div className=\"container\">\r\n                <div className=\"section mb-3\">\r\n                    <MovieGrid category={category}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Catalog;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useParams } from 'react-router';\r\n\r\nimport tmdbApi from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nconst CastList = props => {\r\n\r\n    const {category} = useParams();\r\n\r\n    const [casts, setCasts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getCredits = async () => {\r\n            const res = await tmdbApi.credits(category, props.id);\r\n            setCasts(res.cast.slice(0, 5));\r\n        }\r\n        getCredits();\r\n    }, [category, props.id]);\r\n    return (\r\n        <div className=\"casts\">\r\n            {\r\n                casts.map((item, i) => (\r\n                    <div key={i} className=\"casts__item\">\r\n                        <div className=\"casts__item__img\" style={{backgroundImage: `url(${apiConfig.w500Image(item.profile_path)})`}}></div>\r\n                        <p className=\"casts__item__name\">{item.name}</p>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CastList;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport { useParams } from 'react-router';\r\n\r\nimport tmdbApi from '../../api/tmdbApi';\r\n\r\nconst VideoList = props => {\r\n\r\n    const {category} = useParams();\r\n\r\n    const [videos, setVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getVideos = async () => {\r\n            const res = await tmdbApi.getVideos(category, props.id);\r\n            setVideos(res.results.slice(0, 5));\r\n        }\r\n        getVideos();\r\n    }, [category, props.id]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                videos.map((item, i) => (\r\n                    <Video key={i} item={item}/>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nconst Video = props => {\r\n\r\n    const item = props.item;\r\n\r\n    const iframeRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\r\n        iframeRef.current.setAttribute('height', height);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"video\">\r\n            <div className=\"video__title\">\r\n                <h2>{item.name}</h2>\r\n            </div>\r\n            <iframe\r\n                src={`https://www.youtube.com/embed/${item.key}`}\r\n                ref={iframeRef}\r\n                width=\"100%\"\r\n                title=\"video\"\r\n            ></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport tmdbApi from '../../api/tmdbApi';\r\nimport apiConfig from '../../api/apiConfig';\r\n\r\nimport './detail.scss';\r\nimport CastList from './CastList';\r\nimport VideoList from './VideoList';\r\n\r\nimport MovieList from '../../components/movie-list/MovieList';\r\n\r\nconst Detail = () => {\r\n\r\n    const { category, id } = useParams();\r\n\r\n    const [item, setItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getDetail = async () => {\r\n            const response = await tmdbApi.detail(category, id, {params:{}});\r\n            setItem(response);\r\n            window.scrollTo(0,0);\r\n        }\r\n        getDetail();\r\n    }, [category, id]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                item && (\r\n                    <>\r\n                        <div className=\"banner\" style={{backgroundImage: `url(${apiConfig.originalImage(item.backdrop_path || item.poster_path)})`}}></div>\r\n                        <div className=\"mb-3 movie-content container\">\r\n                            <div className=\"movie-content__poster\">\r\n                                <div className=\"movie-content__poster__img\" style={{backgroundImage: `url(${apiConfig.originalImage(item.poster_path || item.backdrop_path)})`}}></div>\r\n                            </div>\r\n                            <div className=\"movie-content__info\">\r\n                                <h1 className=\"title\">\r\n                                    {item.title || item.name}\r\n                                </h1>\r\n                                <div className=\"genres\">\r\n                                    {\r\n                                        item.genres && item.genres.slice(0, 5).map((genre, i) => (\r\n                                            <span key={i} className=\"genres__item\">{genre.name}</span>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                                <p className=\"overview\">{item.overview}</p>\r\n                                <div className=\"cast\">\r\n                                    <div className=\"section__header\">\r\n                                        <h2>Casts</h2>\r\n                                    </div>\r\n                                    <CastList id={item.id}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container\">\r\n                            <div className=\"section mb-3\">\r\n                                <VideoList id={item.id}/>\r\n                            </div>\r\n                            <div className=\"section mb-3\">\r\n                                <div className=\"section__header mb-2\">\r\n                                    <h2>Similar</h2>\r\n                                </div>\r\n                                <MovieList category={category} type=\"similar\" id={item.id}/>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from '../pages/Home';\r\nimport Catalog from '../pages/Catalog';\r\nimport Detail from '../pages/detail/Detail';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route\r\n                path='/:category/search/:keyword'\r\n                component={Catalog}\r\n            />\r\n            <Route\r\n                path='/:category/:id'\r\n                component={Detail}\r\n            />\r\n            <Route\r\n                path='/:category'\r\n                component={Catalog}\r\n            />\r\n            <Route\r\n                path='/'\r\n                exact\r\n                component={Home}\r\n            />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import 'swiper/swiper.min.css';\r\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\r\nimport './App.scss';\r\n\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport Header from './components/header/Header';\r\nimport Footer from './components/footer/Footer';\r\n\r\nimport Routes from './config/Routes';\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Route render={props => (\r\n                <>\r\n                    <Header {...props}/>\r\n                    <Routes/>\r\n                    <Footer/>\r\n                </>\r\n            )}/>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}